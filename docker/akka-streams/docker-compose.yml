version: '2.2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-1:
    image: confluentinc/cp-kafka:5.1.0
    container_name: kafka-1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      #      https://docs.confluent.io/current/installation/docker/config-reference.html
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: "/usr/bin/kafka-topics --list --zookeeper zookeeper:2181"
      interval: 15s
      timeout: 15s
      retries: 10

  schema-registry:
    image: confluentinc/cp-schema-registry:5.1.0
    container_name: schema-registry
    depends_on:
      - kafka-1
      - zookeeper
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8082
    ports:
      - "8082:8082"

  kafka-topics:
    image: confluentinc/cp-kafka:5.1.0
    container_name: kafka-topics
    depends_on:
      kafka-1:
        condition: service_healthy
    command: /bin/bash -c "echo creating kafka topic && /usr/bin/kafka-topics --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic jtonic-akka-streams-topic"

  cassandra:
    image: cassandra:3.11.2
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    restart: always
    #volumes:
    #  - ./out/cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
      interval: 15s
      timeout: 10s
      retries: 10

  cassandra-load-keyspace:
    image: cassandra:3.11.2
    container_name: cassandra-load-keyspace
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./cql/schema.cql:/schema.cql
    command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra -f /schema.cql"

  graphite:
    image: graphiteapp/graphite-statsd
    container_name: graphite
    ports:
      - "80:80"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "8125:8125"
      - "8126:8126"
    restart: always

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.4.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - kafka-1
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka-1:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8082"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  prometheus:
    image: prom/prometheus:v2.8.1
    container_name: prometheus
    volumes: ["./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"]
    ports: ["9090:9090"]
    networks: ["sandbox"]

  grafana:
    image: grafana/grafana:6.0.2
    container_name: grafana
    volumes: ["./grafana/plugins/cinnamon-prometheus-app:/var/lib/grafana/plugins/cinnamon-prometheus-app"]
    ports: ["3000:3000"]
    networks: ["sandbox"]
    depends_on: ["prometheus"]

networks:

  sandbox:
    driver: bridge
